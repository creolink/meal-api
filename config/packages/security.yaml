security:
    role_hierarchy:
        ROLE_USER:
            - ROLE_OWNED_MEALS_EDIT
            - ROLE_OWNED_USER_EDIT
        ROLE_ADMIN:
            - ROLE_ALL_USERS_EDIT
            - ROLE_ALL_MEALS_EDIT
        ROLE_MODERATOR:
            - ROLE_ALL_USERS_EDIT
            - ROLE_OWNED_MEALS_EDIT

    encoders:
        App\Auth\Domain\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Auth\Domain\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/auth/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern:  ^/auth/register
            stateless: true
            anonymous: true

        api:
            pattern:  ^/
            stateless: true
            anonymous: false
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator


#        main:
#            anonymous: true
#            lazy: true
#            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/auth/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/(meal|meals), roles: [IS_AUTHENTICATED_FULLY, ROLE_USER, ROLE_ADMIN] }
        - { path: ^/(user|users), roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN, ROLE_MODERATOR] }
